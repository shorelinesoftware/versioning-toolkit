name: 'TAG'
description: 'create new tag based on branch'
inputs:
  is_releasabe_branch:
    description: 'whether the branch is main of release. If is is releasable branch then tag will be pushed to repository'
    required: true
  github_token:
    description: 'github token'
    required: true
  branch_name:
    description: 'branch name'
    required: true
outputs:
  NEW_TAG:
    description: "newly created tag"
    value: ${{ steps.get_tag.outputs.NEW_TAG }}
runs:
  using: "composite"
  steps:
    - name: Make prerelease tag
      if: ${{ inputs.is_releasabe_branch == 'false' && github.ref_type != 'tag' }}
      id: make_prerelease_tag
      uses: '../../'
      with:
        prefix: '${{ inputs.branch_name }}'
        actionName: 'makePrerelease'
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
    - name: Make release tag
      if: ${{ inputs.is_releasabe_branch == 'true' && github.ref_type != 'tag' }}
      id: make_release_tag
      uses: '../../'
      with:
        actionName: 'autoIncrementPatch'
        prefix: '${{ inputs.branch_name }}'
        push: 'true'
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
    - name: Get tag
      shell: bash
      id: get_tag
      run: >-
        if [ "${{ steps.make_prerelease_tag.outputs.NEW_TAG }}" ];
        then
          echo ::set-output name=NEW_TAG::${{ steps.make_prerelease_tag.outputs.NEW_TAG }}
        fi;
        if [ "${{ steps.make_release_tag.outputs.NEW_TAG }}" ];
        then
          echo ::set-output name=NEW_TAG::${{ steps.make_release_tag.outputs.NEW_TAG }}
        fi;
        if [ ${{ github.ref_type }} == 'tag' ];
        then
          echo ::set-output name=NEW_TAG::${{ github.ref_name }}
        fi;